(MAIN-CLASS (ID LinkedList))  {

	(MAIN-FUNCTION (STRING-ARRAY (ID a))  {

	(PRINTLN (NEW-INSTANCE (ID LL) DOT (FUN-CALL (ID Start))))

	}

	}
	
(CLASS-DECL (ID Element))  {

	(VAR-DECL INT (ID Age))

	(VAR-DECL INT (ID Salary))

	(VAR-DECL BOOLEAN (ID Married))


	(MTD-DECL BOOLEAN (ID Init) (TY-ID-LIST (INT (ID v_Age)) (INT (ID v_Salary)) (BOOLEAN (ID v_Married)))  {

	(BLOCK

	(EQSIGN (ID Age) (ID v_Age))

	(EQSIGN (ID Salary) (ID v_Salary))

	(EQSIGN (ID Married) (ID v_Married))

	(RETURN TRUE)

	}

	(MTD-DECL INT (ID GetAge) (No Parameters)  {

	(BLOCK

	(RETURN (ID Age))

	}

	(MTD-DECL INT (ID GetSalary) (No Parameters)  {

	(BLOCK

	(RETURN (ID Salary))

	}

	(MTD-DECL BOOLEAN (ID GetMarried) (No Parameters)  {

	(BLOCK

	(RETURN (ID Married))

	}

	(MTD-DECL BOOLEAN (ID Equal) (TY-ID-LIST ((ID (ID Element)) (ID other)))  {

	(BLOCK

	(VAR-DECL BOOLEAN (ID ret_val))

	(VAR-DECL INT (ID aux01))

	(VAR-DECL INT (ID aux02))

	(VAR-DECL INT (ID nt))

	(EQSIGN (ID ret_val) TRUE)

	(EQSIGN (ID aux01) (ID other) DOT (FUN-CALL (ID GetAge)))

	(IF (!THIS DOT (FUN-CALL (ID Compare))((ID aux01))((ID Age))))  {

	(EQSIGN (ID ret_val) FALSE)

	}

	(ELSE)  {

	(EQSIGN (ID aux02) (ID other) DOT (FUN-CALL (ID GetSalary)))

	(IF (!THIS DOT (FUN-CALL (ID Compare))((ID aux02))((ID Salary))))  {

	(EQSIGN (ID ret_val) FALSE)

	}

	(ELSE)  {

	(IF (ID Married))  {

	(IF (!(ID other) DOT (FUN-CALL (ID GetMarried))))  {

	(EQSIGN (ID ret_val) FALSE)

	}

	(ELSE)  {

	(EQSIGN (ID nt) INTLIT 0)

	}


	}

	(ELSE)  {

	(IF (ID other) DOT (FUN-CALL (ID GetMarried)))  {

	(EQSIGN (ID ret_val) FALSE)

	}

	(ELSE)  {

	(EQSIGN (ID nt) INTLIT 0)

	}


	}


	}



	}


	(RETURN (ID ret_val))

	}

	(MTD-DECL BOOLEAN (ID Compare) (TY-ID-LIST (INT (ID num1)) (INT (ID num2)))  {

	(BLOCK

	(VAR-DECL BOOLEAN (ID retval))

	(VAR-DECL INT (ID aux02))

	(EQSIGN (ID retval) FALSE)

	(EQSIGN (ID aux02) (ID num2) PLUS INTLIT 1))

	(IF (ID num1) < (ID num2)))  {

	(EQSIGN (ID retval) FALSE)

	}

	(ELSE)  {

	(IF (!((ID num1) < (ID aux02)))))  {

	(EQSIGN (ID retval) FALSE)

	}

	(ELSE)  {

	(EQSIGN (ID retval) TRUE)

	}


	}


	(RETURN (ID retval))

	}


}
	
(CLASS-DECL (ID List))  {

	(VAR-DECL (ID (ID Element)) (ID elem))

	(VAR-DECL (ID (ID List)) (ID next))

	(VAR-DECL BOOLEAN (ID end))


	(MTD-DECL BOOLEAN (ID Init) (No Parameters)  {

	(BLOCK

	(EQSIGN (ID end) TRUE)

	(RETURN TRUE)

	}

	(MTD-DECL BOOLEAN (ID InitNew) (TY-ID-LIST ((ID (ID Element)) (ID v_elem)) ((ID (ID List)) (ID v_next)) (BOOLEAN (ID v_end)))  {

	(BLOCK

	(EQSIGN (ID end) (ID v_end))

	(EQSIGN (ID elem) (ID v_elem))

	(EQSIGN (ID next) (ID v_next))

	(RETURN TRUE)

	}

	(MTD-DECL (ID (ID List)) (ID Insert) (TY-ID-LIST ((ID (ID Element)) (ID new_elem)))  {

	(BLOCK

	(VAR-DECL BOOLEAN (ID ret_val))

	(VAR-DECL (ID (ID List)) (ID aux03))

	(VAR-DECL (ID (ID List)) (ID aux02))

	(EQSIGN (ID aux03) THIS)

	(EQSIGN (ID aux02) NEW-INSTANCE (ID List))

	(EQSIGN (ID ret_val) (ID aux02) DOT (FUN-CALL (ID InitNew))((ID new_elem))((ID aux03))(FALSE))

	(RETURN (ID aux02))

	}

	(MTD-DECL BOOLEAN (ID SetNext) (TY-ID-LIST ((ID (ID List)) (ID v_next)))  {

	(BLOCK

	(EQSIGN (ID next) (ID v_next))

	(RETURN TRUE)

	}

	(MTD-DECL (ID (ID List)) (ID Delete) (TY-ID-LIST ((ID (ID Element)) (ID e)))  {

	(BLOCK

	(VAR-DECL (ID (ID List)) (ID my_head))

	(VAR-DECL BOOLEAN (ID ret_val))

	(VAR-DECL BOOLEAN (ID aux05))

	(VAR-DECL (ID (ID List)) (ID aux01))

	(VAR-DECL (ID (ID List)) (ID prev))

	(VAR-DECL BOOLEAN (ID var_end))

	(VAR-DECL (ID (ID Element)) (ID var_elem))

	(VAR-DECL INT (ID aux04))

	(VAR-DECL INT (ID nt))

	(EQSIGN (ID my_head) THIS)

	(EQSIGN (ID ret_val) FALSE)

	(EQSIGN (ID aux04) INTLIT 0 MINUS INTLIT 1))

	(EQSIGN (ID aux01) THIS)

	(EQSIGN (ID prev) THIS)

	(EQSIGN (ID var_end) (ID end))

	(EQSIGN (ID var_elem) (ID elem))

	(WHILE ((!(ID var_end))) (&& ((!(ID ret_val))))
	(IF (ID e) DOT (FUN-CALL (ID Equal))((ID var_elem)))  {

	(EQSIGN (ID ret_val) TRUE)

	(IF (ID aux04) < INTLIT 0))  {

	(EQSIGN (ID my_head) (ID aux01) DOT (FUN-CALL (ID GetNext)))


	}

	(ELSE)  {

	(PRINTLN (INTLIT 0 MINUS INTLIT 555)))

	(EQSIGN (ID aux05) (ID prev) DOT (FUN-CALL (ID SetNext))((ID aux01) DOT (FUN-CALL (ID GetNext))))

	(PRINTLN (INTLIT 0 MINUS INTLIT 555)))


	}



	}

	(ELSE)  {

	(EQSIGN (ID nt) INTLIT 0)

	}


	(IF (!(ID ret_val)))  {

	(EQSIGN (ID prev) (ID aux01))

	(EQSIGN (ID aux01) (ID aux01) DOT (FUN-CALL (ID GetNext)))

	(EQSIGN (ID var_end) (ID aux01) DOT (FUN-CALL (ID GetEnd)))

	(EQSIGN (ID var_elem) (ID aux01) DOT (FUN-CALL (ID GetElem)))

	(EQSIGN (ID aux04) INTLIT 1)


	}

	(ELSE)  {

	(EQSIGN (ID nt) INTLIT 0)

	}


	)


	(RETURN (ID my_head))

	}

	(MTD-DECL INT (ID Search) (TY-ID-LIST ((ID (ID Element)) (ID e)))  {

	(BLOCK

	(VAR-DECL INT (ID int_ret_val))

	(VAR-DECL (ID (ID List)) (ID aux01))

	(VAR-DECL (ID (ID Element)) (ID var_elem))

	(VAR-DECL BOOLEAN (ID var_end))

	(VAR-DECL INT (ID nt))

	(EQSIGN (ID int_ret_val) INTLIT 0)

	(EQSIGN (ID aux01) THIS)

	(EQSIGN (ID var_end) (ID end))

	(EQSIGN (ID var_elem) (ID elem))

	(WHILE (!(ID var_end))
	(IF (ID e) DOT (FUN-CALL (ID Equal))((ID var_elem)))  {

	(EQSIGN (ID int_ret_val) INTLIT 1)


	}

	(ELSE)  {

	(EQSIGN (ID nt) INTLIT 0)

	}


	(EQSIGN (ID aux01) (ID aux01) DOT (FUN-CALL (ID GetNext)))

	(EQSIGN (ID var_end) (ID aux01) DOT (FUN-CALL (ID GetEnd)))

	(EQSIGN (ID var_elem) (ID aux01) DOT (FUN-CALL (ID GetElem)))

	)


	(RETURN (ID int_ret_val))

	}

	(MTD-DECL BOOLEAN (ID GetEnd) (No Parameters)  {

	(BLOCK

	(RETURN (ID end))

	}

	(MTD-DECL (ID (ID Element)) (ID GetElem) (No Parameters)  {

	(BLOCK

	(RETURN (ID elem))

	}

	(MTD-DECL (ID (ID List)) (ID GetNext) (No Parameters)  {

	(BLOCK

	(RETURN (ID next))

	}

	(MTD-DECL BOOLEAN (ID Print) (No Parameters)  {

	(BLOCK

	(VAR-DECL (ID (ID List)) (ID aux01))

	(VAR-DECL BOOLEAN (ID var_end))

	(VAR-DECL (ID (ID Element)) (ID var_elem))

	(EQSIGN (ID aux01) THIS)

	(EQSIGN (ID var_end) (ID end))

	(EQSIGN (ID var_elem) (ID elem))

	(WHILE (!(ID var_end))
	(PRINTLN ((ID var_elem) DOT (FUN-CALL (ID GetAge))))

	(EQSIGN (ID aux01) (ID aux01) DOT (FUN-CALL (ID GetNext)))

	(EQSIGN (ID var_end) (ID aux01) DOT (FUN-CALL (ID GetEnd)))

	(EQSIGN (ID var_elem) (ID aux01) DOT (FUN-CALL (ID GetElem)))

	)


	(RETURN TRUE)

	}


}
	
(CLASS-DECL (ID LL))  {


	(MTD-DECL INT (ID Start) (No Parameters)  {

	(BLOCK

	(VAR-DECL (ID (ID List)) (ID head))

	(VAR-DECL (ID (ID List)) (ID last_elem))

	(VAR-DECL BOOLEAN (ID aux01))

	(VAR-DECL (ID (ID Element)) (ID el01))

	(VAR-DECL (ID (ID Element)) (ID el02))

	(VAR-DECL (ID (ID Element)) (ID el03))

	(EQSIGN (ID last_elem) NEW-INSTANCE (ID List))

	(EQSIGN (ID aux01) (ID last_elem) DOT (FUN-CALL (ID Init)))

	(EQSIGN (ID head) (ID last_elem))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Init)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(EQSIGN (ID el01) NEW-INSTANCE (ID Element))

	(EQSIGN (ID aux01) (ID el01) DOT (FUN-CALL (ID Init))(INTLIT 25)(INTLIT 37000)(FALSE))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Insert))((ID el01)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(PRINTLN (INTLIT 10000000))

	(EQSIGN (ID el01) NEW-INSTANCE (ID Element))

	(EQSIGN (ID aux01) (ID el01) DOT (FUN-CALL (ID Init))(INTLIT 39)(INTLIT 42000)(TRUE))

	(EQSIGN (ID el02) (ID el01))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Insert))((ID el01)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(PRINTLN (INTLIT 10000000))

	(EQSIGN (ID el01) NEW-INSTANCE (ID Element))

	(EQSIGN (ID aux01) (ID el01) DOT (FUN-CALL (ID Init))(INTLIT 22)(INTLIT 34000)(FALSE))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Insert))((ID el01)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(EQSIGN (ID el03) NEW-INSTANCE (ID Element))

	(EQSIGN (ID aux01) (ID el03) DOT (FUN-CALL (ID Init))(INTLIT 27)(INTLIT 34000)(FALSE))

	(PRINTLN ((ID head) DOT (FUN-CALL (ID Search))((ID el02))))

	(PRINTLN ((ID head) DOT (FUN-CALL (ID Search))((ID el03))))

	(PRINTLN (INTLIT 10000000))

	(EQSIGN (ID el01) NEW-INSTANCE (ID Element))

	(EQSIGN (ID aux01) (ID el01) DOT (FUN-CALL (ID Init))(INTLIT 28)(INTLIT 35000)(FALSE))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Insert))((ID el01)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(PRINTLN (INTLIT 2220000))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Delete))((ID el02)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(PRINTLN (INTLIT 33300000))

	(EQSIGN (ID head) (ID head) DOT (FUN-CALL (ID Delete))((ID el01)))

	(EQSIGN (ID aux01) (ID head) DOT (FUN-CALL (ID Print)))

	(PRINTLN (INTLIT 44440000))

	(RETURN INTLIT 0)

	}


}
